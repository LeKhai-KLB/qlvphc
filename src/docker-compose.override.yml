version: '3.4'

services:
  coreservice.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5101:80"
    # volumes:
    #   - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
    #   - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
  catalogservice.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5102:80"
    # volumes:
    #   - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
    #   - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  reportservice.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5103:80"
    # volumes:
    #   - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
    #   - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
      - "8080:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  ocelotapigateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - coreservice.api
      - catalogservice.api
      - reportservice.api
    ports:
      - "5200:80"