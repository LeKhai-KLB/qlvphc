version: '3.9'

services:
  portainer:
    image: portainer/portainer-ce

  coreservice.api:
    image: ${DOCKER_REGISTRY-}coreserviceapi
    build:
      context: .
      dockerfile: Services/CoreService/CoreService.API/Dockerfile

  catalogservice.api:
    image: ${DOCKER_REGISTRY-}catalogserviceapi
    build:
      context: .
      dockerfile: Services/CatalogService/CatalogService.API/Dockerfile


  reportservice.api:
    image: ${DOCKER_REGISTRY-}reportserviceapi
    build:
      context: .
      dockerfile: Services/ReportService/ReportService.API/Dockerfile

  ocelotapigateway:
    image: ${DOCKER_REGISTRY-}ocelotapigateway
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGateway/Dockerfile

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    networks:
      - qlvphc-network
    depends_on:
      - cadvisor
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=123456  # change this
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - qlvphc-network

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - qlvphc-network
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - qlvphc-network
    restart: always
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - qlvphc-network
    restart: always
    deploy:
      mode: global

volumes:
  portainer_data:
    name: portainer_data
  grafana-storage:

networks:
  qlvphc-network:
    external: true